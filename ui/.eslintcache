[{"C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\index.js":"1","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\App.js":"2","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\login.js":"3","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\register.js":"4","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\requests.js":"5","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\message.js":"6","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\overview.js":"7"},{"size":234,"mtime":1612108106390,"results":"8","hashOfConfig":"9"},{"size":1079,"mtime":1612608039684,"results":"10","hashOfConfig":"9"},{"size":3651,"mtime":1612608039685,"results":"11","hashOfConfig":"9"},{"size":4094,"mtime":1612713090016,"results":"12","hashOfConfig":"9"},{"size":628,"mtime":1612608039687,"results":"13","hashOfConfig":"9"},{"size":16570,"mtime":1612713090016,"results":"14","hashOfConfig":"9"},{"size":997,"mtime":1612608039686,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"5u4xgy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\index.js",[],["34","35"],"C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\App.js",[],"C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\login.js",["36"],"import React from \"react\";\r\nimport \"./index.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {login} from \"./requests\";\r\nimport {Formik} from \"formik\";\r\n\r\nclass Login extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Formik\r\n                    onSubmit={(values, actions) => {\r\n                        const data = {\r\n                            email: values.email,\r\n                            password: values.password,\r\n                        };\r\n\r\n                        console.log(data);\r\n                        window.location = \"/message\";\r\n\r\n\r\n                        const requestOptions = {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'text/plain' },\r\n                            body: JSON.stringify({ email: values.email,\r\n                                password: values.password,\r\n                                 })\r\n                        };\r\n                        fetch('http://localhost:8300/gateway/login', requestOptions)\r\n                            .then(response => {\r\n                                console.log(response.data);\r\n                            }).catch((error) => {\r\n                            console.log(error);\r\n                        });\r\n\r\n                        // login(data).then(response => {\r\n                        //         this.props.history.push({\r\n                        //                             pathname: 'message',\r\n                        //                             state: {token: response.data.token}\r\n                        //                         })\r\n                        //     console.log(response.data);\r\n                        // }).catch((error) => {\r\n                        //     console.log(error);\r\n                        // })\r\n                    }}\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                >\r\n                    {({\r\n                          handleSubmit,\r\n                          handleChange,\r\n                          values,\r\n                      }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label className=\"form-size\">Email</Form.Label>\r\n                                <Form.Control\r\n                                    className=\"input-size\"\r\n                                    type=\"email\"\r\n                                    value={values.email} onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    className=\"input-size\"\r\n                                    type=\"password\"\r\n                                    value={values.password} onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button block className=\"input-size\" size=\"lg\" type=\"submit\" style={{marginBottom: \"15px\"}}>\r\n                                Einloggen\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default Login;","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\register.js",["37","38"],"import React from \"react\";\r\nimport \"./index.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {Formik} from \"formik\";\r\nimport {register} from \"./requests\";\r\nimport axios from \"axios\";\r\n\r\nclass Register extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // // Simple POST request with a JSON body using fetch\r\n        // const requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'text/plain' },\r\n        //     body: JSON.stringify({ title: 'React POST Request Example' })\r\n        // };\r\n        // fetch('http://localhost:8300/gateway/registration', requestOptions)\r\n        //     .then(console.log(\"test\"));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Register\">\r\n                <Formik\r\n                onSubmit={(values, actions) => {\r\n                    const data = {\r\n                        email: values.email,\r\n                        password: values.password,\r\n                        country: values.country,\r\n                    };\r\n\r\n                    console.log(data);\r\n\r\n                    const requestOptions = {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'text/plain' },\r\n                        body: JSON.stringify( { email: values.email,\r\n                            password: values.password,\r\n                            country: values.country })\r\n                    };\r\n                    fetch('http://localhost:8300/gateway/registration', requestOptions)\r\n                        .then(response => {\r\n                                console.log(response);\r\n                            }).catch((error) => {\r\n                                console.log(error);\r\n                            });\r\n                }}\r\n                initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    country: \"\",\r\n                }}\r\n                >\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        values,\r\n                    }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\">\r\n                                <Form.Label className=\"form-size\">Email</Form.Label>\r\n                                <Form.Control\r\n                                    className=\"input-size\"\r\n                                    autoFocus\r\n                                    type=\"email\"\r\n                                    value={values.email} onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    className=\"input-size\"\r\n                                    type=\"password\"\r\n                                    value={values.password} onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"country\">\r\n                                <Form.Label>Land</Form.Label>\r\n                                <Form.Control\r\n                                    className=\"input-size\"\r\n                                    type=\"country\"\r\n                                    value={values.country} onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button className=\"input-size\" block size=\"lg\" type=\"submit\" style={{marginBottom: \"15px\"}}>\r\n                                Registrieren\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\requests.js",[],"C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\message.js",["39","40"],"import React from \"react\";\r\nimport \"./message.css\";\r\nimport {Formik} from \"formik\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {sendMessage} from \"./requests\";\r\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Message extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //token: this.props.location.state.token,\r\n            messages: [{\r\n                body: \"Hello Cloud Native\",\r\n                resE: \"hallo@test.de\",\r\n                sendE: \"sender@sending.com\",\r\n            },\r\n                {\r\n                    body: \"Hello from the other side\",\r\n                    resE: \"hallo@test.de\",\r\n                    sendE: \"senderTest@sending.com\"\r\n                },\r\n                {\r\n                    body: \"Hello 3456\",\r\n                    resE: \"hallo@test.de\",\r\n                    sendE: \"senderTest123@sending.com\"\r\n                }],\r\n            showMessage: false,\r\n            currentBody: '',\r\n            showNewTemplate: false,\r\n            recipientEmail: '',\r\n            senderEmail: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    showMessageItem(item) {\r\n        console.log(item);\r\n        this.setState({\r\n            showNewTemplate: false,\r\n            showMessage: true,\r\n            body: item.body,\r\n            recipientEmail: item.resE,\r\n            senderEmail: item.sendE,\r\n        })\r\n    }\r\n\r\n    logout() {\r\n        window.location = \"/\"\r\n        //this.props.location.push('/')\r\n    }\r\n\r\n    addEmptyTemplate = () => {\r\n        this.setState({\r\n            showNewTemplate: true,\r\n            showMessage: false,\r\n            body: \"\",\r\n            senderEmail: \"\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // https://bootstrapious.com/p/bootstrap-chat\r\n        return (\r\n            <div className=\"Message\">\r\n                <Formik\r\n                    onSubmit={(values, actions) => {\r\n                        const data = {\r\n                            // recipientEmail: this.state.recipientEmail,\r\n                            // senderEmail: this.state.senderEmail === \"\" ? values.senderEmail : this.state.senderEmail,\r\n                            recipientEmail: this.state.senderEmail === \"\" ? values.senderEmail : this.state.senderEmail,\r\n                            body: values.message,\r\n                            // token: this.state.token,\r\n                        };\r\n\r\n                        console.log(data)\r\n\r\n                        const requestOptions = {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'text/plain' },\r\n                            body: JSON.stringify(data)\r\n                        };\r\n                        fetch('http://localhost:8300/gateway/message', requestOptions)\r\n                            .then(response => {\r\n                                console.log(response);\r\n                            }).catch((error) => {\r\n                            console.log(error);\r\n                        });\r\n\r\n                    }}\r\n                    initialValues={{\r\n                        senderEmail: this.state.senderEmail,\r\n                        message: \"\",\r\n                    }}\r\n                >\r\n                    {({\r\n                          handleSubmit,\r\n                          handleChange,\r\n                          values,\r\n                      }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <div className=\"message-box-size\"\r\n                                 style={{marginTop: \"160px\", marginLeft: \"170px\", marginRight: \"170px\"}}>\r\n                                <div className=\"row rounded-lg overflow-hidden shadow\">\r\n                                    <div className=\"col-5 px-0\">\r\n                                        <div className=\"bg-white\">\r\n                                            <div className=\"bg-gray px-4 py-2 bg-light\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-4\">\r\n                                                        <p className=\"h5 mb-0 py-1\">Recent</p>\r\n                                                    </div>\r\n                                                    <div className=\"col-5 mt-1\" onClick={this.addEmptyTemplate}>\r\n                                                        <Link><AddIcon/>Neue Nachricht</Link></div>\r\n                                                    <div className=\"col-3 mt-1\"><Link\r\n                                                        onClick={this.logout}><PowerSettingsNewIcon/> Ausloggen</Link>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"messages-box\">\r\n                                                <div className=\"list-group rounded-0\">\r\n                                                    <ListGroup>\r\n                                                        {this.state.messages.map(item =>\r\n                                                            <ListGroup.Item onClick={(e =>\r\n                                                                this.showMessageItem(item))\r\n                                                            }> <AccountCircleIcon fontSize=\"large\"/>{item.sendE}\r\n                                                            </ListGroup.Item>\r\n                                                        )}\r\n                                                    </ListGroup>\r\n\r\n                                                    {/*<a className=\"list-group-item list-group-item-action active text-white rounded-0\">*/}\r\n                                                    {/*         <div className=\"media\"><AccountCircleIcon fontSize=\"large\"/>*/}\r\n                                                    {/*       <div className=\"media-body ml-4\">*/}\r\n                                                    {/*               <div className=\"d-flex align-items-center justify-content-between mb-1\">*/}\r\n                                                    {/*                <h6 className=\"mb-0\">Jason Doe</h6><small*/}\r\n                                                    {/*                      className=\"small font-weight-bold\">25*/}\r\n                                                    {/*                      Dec</small>*/}\r\n                                                    {/*                 </div>*/}\r\n                                                    {/*                 <p className=\"font-italic mb-0 text-small\">Lorem ipsum dolor sit amet,*/}\r\n                                                    {/*                      consectetur adipisicing elit, sed do eiusmod tempor incididunt ut*/}\r\n                                                    {/*                    labore.</p>*/}\r\n                                                    {/*            </div>*/}\r\n                                                    {/*       </div>*/}\r\n                                                    {/*    </a>*/}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {this.state.showNewTemplate ?\r\n                                        <div className=\"col-7 px-0\">\r\n                                        <div className=\"px-4 py-5 chat-box bg-white\">\r\n\r\n                                            <Form.Group controlId=\"senderEmail\">\r\n                                                <Form.Control\r\n                                                    className=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                                                    type=\"text\"\r\n                                                    aria-describedby=\"button-addon2\"\r\n                                                    placeholder=\"Empfänger\"\r\n                                                    value={values.senderEmail}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n\r\n                                            </Form.Group>\r\n\r\n                                            {/*{this.state.showMessage ?*/}\r\n                                            {/*    <div className=\"media w-50 ml-auto mb-3\">*/}\r\n\r\n                                            {/*        <div className=\"media-body\">*/}\r\n                                            {/*            <div className=\"bg-primary rounded py-2 px-3 mb-2\">*/}\r\n                                            {/*                <p className=\"text-small mb-0 text-white\">Apollo*/}\r\n                                            {/*                    University, Delhi, India*/}\r\n                                            {/*                    Test</p>*/}\r\n                                            {/*                <p className=\"text-small mb-0 text-white\">{this.state.body}</p>*/}\r\n                                            {/*            </div>*/}\r\n                                            {/*        </div>*/}\r\n                                            {/*    </div> : <div></div>}*/}\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"row\" style={{\r\n                                            backgroundColor: \"#f8f9fa\",\r\n                                            marginLeft: \"0px\",\r\n                                            marginBottom: \"-16px\"\r\n                                        }}>\r\n                                            <div className=\"col-11\">\r\n                                                <Form.Group controlId=\"message\">\r\n                                                    <Form.Control\r\n                                                        className=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                                                        type=\"text\"\r\n                                                        aria-describedby=\"button-addon2\"\r\n                                                        placeholder=\"Nachricht schreiben ...\"\r\n                                                        value={values.message} onChange={handleChange}\r\n                                                    />\r\n\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-1 \">\r\n                                                <Form.Group controlId=\"email\">\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button id=\"button-addon2\" type=\"submit\"\r\n                                                                className=\"btn btn-link\"><SendIcon/></button>\r\n                                                    </div>\r\n                                                </Form.Group>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : <div className=\"col-7 px-0\">\r\n                                            <div className=\"px-4 py-5 chat-box bg-white\">\r\n\r\n                                                <Form.Group controlId=\"senderEmail\">\r\n                                                    <Form.Control\r\n                                                        className=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                                                        type=\"text\"\r\n                                                        aria-describedby=\"button-addon2\"\r\n                                                        placeholder=\"Empfänger\"\r\n                                                        value={this.state.senderEmail}\r\n                                                        disabled\r\n                                                        onChange={handleChange}\r\n                                                    />\r\n\r\n                                                </Form.Group>\r\n\r\n                                                {this.state.showMessage ?\r\n                                                    <div className=\"media w-50 ml-auto mb-3\">\r\n\r\n                                                        <div className=\"media-body\">\r\n                                                            <div className=\"bg-primary rounded py-2 px-3 mb-2\">\r\n                                                                <p className=\"text-small mb-0 text-white\">{this.state.body}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div> : <div></div>}\r\n\r\n                                            </div>\r\n\r\n                                            <div className=\"row\" style={{\r\n                                                backgroundColor: \"#f8f9fa\",\r\n                                                marginLeft: \"0px\",\r\n                                                marginBottom: \"-16px\"\r\n                                            }}>\r\n                                                <div className=\"col-11\">\r\n                                                    <Form.Group controlId=\"message\">\r\n                                                        <Form.Control\r\n                                                            className=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                                                            type=\"text\"\r\n                                                            aria-describedby=\"button-addon2\"\r\n                                                            placeholder=\"Nachricht schreiben ...\"\r\n                                                            value={values.message}\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                                <div className=\"col-1 \">\r\n                                                    <Form.Group controlId=\"email\">\r\n                                                        <div className=\"input-group-append\">\r\n                                                            <button id=\"button-addon2\" type=\"submit\"\r\n                                                                    className=\"btn btn-link\"><SendIcon/></button>\r\n                                                        </div>\r\n                                                    </Form.Group>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            {/*<form action=\"#\" className=\"bg-light\">*/}\r\n                                            {/* <div className=\"input-group\">*/}\r\n                                            {/*      <input type=\"text\" placeholder=\"Nachricht schreiben ...\" aria-describedby=\"button-addon2\"*/}\r\n                                            {/*              className=\"form-control rounded-0 border-0 py-4 bg-light\"/>*/}\r\n                                            {/*       <div className=\"input-group-append\">*/}\r\n                                            {/*         <button id=\"button-addon2\" type=\"submit\" className=\"btn btn-link\"><SendIcon/></button>*/}\r\n                                            {/*      </div>*/}\r\n                                            {/*    </div>*/}\r\n                                            {/*</form>*/}\r\n                                        </div>}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;","C:\\Users\\Tristan Glaes\\OneDrive\\Desktop\\CloudNative\\UI\\src\\overview.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":9,"nodeType":"47","messageId":"48","endLine":4,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":5,"column":9,"nodeType":"47","messageId":"48","endLine":5,"endColumn":17},{"ruleId":"45","severity":1,"message":"50","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":13},{"ruleId":"45","severity":1,"message":"51","line":8,"column":9,"nodeType":"47","messageId":"48","endLine":8,"endColumn":20},{"ruleId":"45","severity":1,"message":"52","line":9,"column":9,"nodeType":"47","messageId":"48","endLine":9,"endColumn":15},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","'axios' is defined but never used.","'sendMessage' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]